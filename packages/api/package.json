{
  "name": "@metis/api",
  "description": "GraphQL API",
  "scripts": {
    "deps:sync-types": "npx typesync && npm install",
    "graphql:generate-schema": "dotenv -e .env.dev --  npx ts-node --require tsconfig-paths/register ./scripts/generate-graphql-schema.ts --compiler-options 'tsconfig.json'",
    "code:format": "npx prettier --config './../../.prettierrc' --write '{src,test}/**/*.{js,ts}'",
    "code:lint": "npx eslint 'src' --ext '.js,.ts' --config '.eslintrc'",
    "code:lint-and-fix": "npm run lint -- --fix",
    "clear": "npx rimraf ./dist",
    "build": "tsc --project tsconfig.json",
    "rebuild": "npm run clear && npm run build",
    "start": "dotenv -e .env -- npm run rebuild && node --require tsconfig-paths/register ./dist/src/index.js",
    "start:dev": "npm run docker:start && dotenv -e .env.dev -- npx ts-node --require tsconfig-paths/register ./src/index.ts",
    "start:dev:watch": "npm run docker:start && dotenv -e .env.dev -- npx nodemon --watch 'src' --ext '.js,.ts' --exec 'npx ts-node --require tsconfig-paths/register ./src/index.ts'",
    "test": "dotenv -e .env.test -- npx jest --config 'jest.config.js' --runInBand --detectOpenHandles",
    "test:integration": "npm run docker:up:test && npm run db:push:test && npm run test && npm run docker:down:test",
    "test:cov": "npm run test -- --coverage --no-cache",
    "test:watch": "npm run test -- --watchAll",
    "docker:start": "docker-compose -f docker-compose.yml start",
    "docker:stop": "docker-compose -f docker-compose.yml stop",
    "docker:up": "docker-compose -f docker-compose.yml up --build --detach && npm run db:push && npm run db:seed",
    "docker:up:test": "docker-compose -f docker-compose.test.yml up --build --detach && npm run db:push:test",
    "docker:down": "docker-compose -f docker-compose.yml down",
    "docker:down:test": "docker-compose -f docker-compose.test.yml down",
    "db:migrate": "dotenv -e .env.dev -- npx prisma migrate dev",
    "db:push": "dotenv -e .env.dev -- npx prisma db push",
    "db:push:test": "dotenv -e .env.test -- npx prisma db push",
    "db:seed": "dotenv -e .env.dev -- npx ts-node --require tsconfig-paths/register scripts/seed-databases.ts",
    "db:generate-client": "npx prisma generate --schema 'prisma/schema.prisma'"
  },
  "scriptsComment": {
    "start": "rebuild and run",
    "docker:up": "create and start the containers, rebuilding image",
    "docker:down": "stop and remove the containers, networks, images, volumes",
    "docker:start": "start the already created containers",
    "docker:stop": "stop the already started containers",
    "db:generate-client": "based on the current prisma schema, regenerate the prisma client library for type-safety queries",
    "db:migrate": "based on the current prisma schema, creates a new SQL migration file and run it against the database",
    "db:push": "push the current prisma schema to the database, ignoring data loss and without migration history",
    "db:seed": "delete all data and seed databases again with initial state",
    "graphql:generate-schema": "based on the current schema defined ./src/infra/http/graphql/schema.ts, generate ./graphql/schema.graphql"
  },
  "author": "Bruno Papa <bruno.papa@hotmail.com>",
  "version": "1.0.0",
  "license": "MIT",
  "private": true,
  "engines": {
    "node": "16"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run test && npm run format && npm run lint"
    }
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.31.0",
    "@aws-sdk/lib-storage": "^3.36.0",
    "@metis/shared": "file:../shared",
    "@prisma/client": "^3.7.0",
    "axios": "^0.24.0",
    "bcrypt": "^5.0.1",
    "busboy": "^0.3.1",
    "core-js": "^3.6.5",
    "dataloader": "^2.0.0",
    "dotenv-safe": "^8.2.0",
    "expo-server-sdk": "^3.6.0",
    "fs-extra-promise": "^1.0.1",
    "geolib": "^3.3.3",
    "graphql": "^15.5.1",
    "graphql-relay": "^0.8.0",
    "graphql-subscriptions": "^1.1.0",
    "graphql-ws": "^5.5.5",
    "isomorphic-fetch": "^3.0.0",
    "jsonwebtoken": "^8.5.1",
    "kcors": "^2.2.2",
    "koa": "^2.13.0",
    "koa-bodyparser": "^4.3.0",
    "koa-compose": "^4.1.0",
    "koa-convert": "^2.0.0",
    "koa-graphql": "^0.9.0",
    "koa-logger": "^3.2.1",
    "koa-router": "^9.4.0",
    "lru_map": "^0.4.1",
    "pretty-bytes": "^5.6.0",
    "pretty-error": "^2.1.1",
    "redis": "^4.0.0-rc.3",
    "typescript": "^4.5.2",
    "winston": "^3.3.3",
    "ws": "^8.2.3"
  },
  "devDependencies": {
    "@types/bcrypt": "^10.0.28-alpha",
    "@types/busboy": "^0.2.4",
    "@types/core-js": "^2.5.5",
    "@types/debug": "^4.1.7",
    "@types/dotenv-safe": "^8.1.2",
    "@types/eslint": "^7.28.0",
    "@types/eslint-plugin-prettier": "^3.1.0",
    "@types/esm": "^3.2.0",
    "@types/fs-extra-promise": "^1.0.10",
    "@types/graphql": "^14.5.0",
    "@types/graphql-relay": "^0.6.0",
    "@types/isomorphic-fetch": "^0.0.35",
    "@types/jest": "^27.0.2",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/kcors": "^2.2.3",
    "@types/koa": "^2.13.4",
    "@types/koa-bodyparser": "^4.3.3",
    "@types/koa-compose": "^3.2.5",
    "@types/koa-convert": "^1.2.3",
    "@types/koa-graphql": "^0.8.5",
    "@types/koa-logger": "^3.1.1",
    "@types/koa-router": "^7.4.1",
    "@types/node": "^16.11.7",
    "@types/nodemon": "^1.19.1",
    "@types/prettier": "^2.4.1",
    "@types/rimraf": "^3.0.2",
    "@types/supertest": "^2.0.11",
    "@types/triple-beam": "^1.3.2",
    "@types/ws": "^8.2.0",
    "@typescript-eslint/eslint-plugin": "^4.29.3",
    "@typescript-eslint/parser": "^4.29.3",
    "dotenv-cli": "^4.1.0",
    "eslint": "^7.32.0",
    "eslint-config-airbnb-base": "^14.2.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-import-resolver-typescript": "^2.3.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jest": "^24.4.0",
    "eslint-plugin-no-loops": "^0.3.0",
    "eslint-plugin-prettier": "^3.4.1",
    "esm": "^3.2.25",
    "husky": "^7.0.2",
    "jest": "^27.1.0",
    "jest-fetch-mock": "^3.0.3",
    "jest-junit": "^12.0.0",
    "jest-mock-extended": "^2.0.4",
    "jest-runner-eslint": "^0.10.0",
    "nodemon": "^2.0.14",
    "prettier": "^2.4.1",
    "prisma": "^3.7.0",
    "random-location": "^1.1.3",
    "repl": "^0.1.3",
    "repl-promised": "^0.1.0",
    "repl.history": "^0.1.4",
    "rimraf": "^3.0.2",
    "supertest": "^6.1.6",
    "ts-jest": "^27.0.7",
    "ts-node": "^10.2.1",
    "tsconfig-paths": "^3.12.0",
    "typescript-eslint-parser": "^22.0.0",
    "typesync": "^0.8.0"
  }
}
